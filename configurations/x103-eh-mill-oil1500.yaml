# Device: Astra
# Note to self:
# - Relay1 styr huvudström
# - Relay2 styr pump
# - Relay3 styr värmare
# - Relay4 oanvänd

substitutions:
  network: "192.168.12"
  device_num: "103"
  device_type: "mill-oil1500"
  device_subtype: "wifi3"
  device_name: x${device_num}-eh-${device_type}
  device_ip: "${network}.${device_num}"
  admin_password: !secret admin_password
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  mqtt_user: !secret mqtt_user
  mqtt_password: !secret mqtt_password
  mqtt_broker: !secret mqtt_broker
  ca_certificates: !secret letsencrypt_cacerts

## ep energy mgmt
  em_usage: ""
  em_route: ""

# to change the ota-password, update once with old pw and uncomment this on_boot to set a new pw
esphome:
  name: ${device_name}

# wifi:
#  use_address: 192.168.12.200

esp32:
  board: esp32dev
  framework:
    type: esp-idf

logger:
  level: WARN

output:
  - platform: gpio
    pin: GPIO18   # RY1
    id: "output_1"
  - platform: gpio
    pin: GPIO19   # RY2
    id: "output_2"
  
switch:
  - platform: output
    name: "Switch 1"
    id: "switch_1"
    output: "output_1"
    # restore_mode: ALWAYS_ON
  - platform: output
    name: "Switch 2"
    id: "switch_2"
    output: "output_2"
    # restore_mode: ALWAYS_OFF
#   - platform: output
#     name: "Switch 3"
#     id: "switch_3"
#     output: "output_3"
#     restore_mode: ALWAYS_OFF
#   - platform: output
#     name: "Switch 4"
#     id: "switch_4"
#     output: "output_4"

# sensor:
#   - platform: adc
#     name: Fuel Level
#     pin: GPIO39
#     accuracy_decimals: 2
#     update_interval: 10s
#     attenuation: 0dB
# #    filters:
# #      - multiply: 2.0 

# Example configuration entry
sensor:
  - platform: ntc
    sensor: resistance_sensor
    calibration:
      b_constant: 3950 # not verified, check
      reference_temperature: 298.15K
      reference_resistance: 10kOhm
    id: temperature
    name: Temperature
    filters:
      - sliding_window_moving_average:
          window_size: 12 # e.g. 1min @ adc update_interval 5s
          send_every: 1 # e.g. 5s @ adc update_interval 5s
  - platform: ntc
    sensor: resistance_sensor
    calibration:
      b_constant: 3950 # not verified, check
      reference_temperature: 298.15K
      reference_resistance: 10kOhm
    id: temperature_fast
    name: "Temperature Instant"
  # - platform: ntc
  #   sensor: resistance_sensor
  #   calibration:
  #     # b_constant: ??
  #     # reference_temperature: 25°C
  #     # reference_resistance: ??
  #     - 2966.00439Ohm -> 3.3°C
  #     - 1965.15833Ohm -> 22.7°C
  #     - 438.65070Ohm -> 75.5°C      
  #   name: NTC Temperature
  #   id: temperature
  # Example source sensors:
  - platform: resistance
    id: resistance_sensor
    sensor: source_sensor
    configuration: DOWNSTREAM
    # resistor: 5.6kOhm
    resistor: 5.1kOhm # picture 5101 unclear, produces better readings than 3101 = 3k1
    name: Resistance Sensor
    # filters:
    #   - offset: -1000.0 # ADC pin has 1k resistor inline, discounting this from sensed value.
  - platform: adc
    id: source_sensor
    attenuation: auto
    name: "Vout"
    pin: GPIO35
    update_interval: 5s
  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_b:
      number: GPIO27
      mode: INPUT
    pin_a:
      number: GPIO26
      mode: INPUT
    max_value: 100
    min_value: 0
    resolution: 4
    on_value:
      - logger.log: 
          format: "$device_name Rotation State Change - No action configured"
          level: WARN

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO33 # wrong gpio 
      mode: INPUT
      inverted: True
    name: "Button 1"
    on_press:
      - logger.log: 
          format: "$device_name Button 1 Pressed - No action configured"
          level: WARN
      # - switch.toggle: switch_1
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT
      inverted: True
    name: "Button 2"
    on_press:
      - logger.log: 
          format: "$device_name Button 2 Pressed - No action configured"
          level: WARN
      # - switch.toggle: switch_2
  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT
      inverted: True
    name: "Button 3"
    on_press:
      - logger.log: 
          format: "$device_name Button 3 Pressed - No action configured"
          level: WARN
      # - switch.toggle: switch_3
  - platform: gpio
    pin:
      number: GPIO25
      mode: INPUT
      inverted: True
    name: "Button 4"
    on_press:
      - logger.log: 
          format: "$device_name Button 4 Pressed - No action configured"
          level: WARN
      #- switch.toggle: switch_4

# display:
#     platform: tm1637
#     id: tm1637_display
#     clk_pin: GPIO22
#     dio_pin: GPIO21
#     inverted: true
#     length: 2
#     lambda: |-
#       it.print("32");
 
climate:
  - platform: thermostat
    name: "Thermostat Climate Controller 01"
    visual:
      min_temperature: 6
      max_temperature: 25
      temperature_step: 0.5
    sensor: temperature
    min_heating_off_time: 0s
    min_heating_run_time: 0s
    min_idle_time: 0s
    heat_deadband: 0.5 # turn on heating when 0.5 under set_temp 
    heat_overrun: 0.0 # no need, temp will overrun by 0.2-0.3 anyway
    heat_action:
      - switch.turn_on: switch_2
    idle_action:
      - switch.turn_off: switch_2
    default_preset: Home
    preset:
      - name: Home
        default_target_temperature_low: 12 °C
  
packages:
  remote_package:
    url: https://github.com/pihiandreas/esphome_components
    ref: main
    files:
      - ep_esphome_core.yaml # Core package
    refresh: 300s

