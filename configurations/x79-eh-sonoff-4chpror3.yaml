# Device: Sonoff 4ch Pro R3 V1.1 2021-11-11
# Note to self:
# - installerad i Grottan vid golvvärmens jakotukki
# - ström från nedre säkringsskåp L3 / vikavirta / "Fördelningsstock ..."
# - Relay1 styr cirkulationspumpen
# - Relay2 styr 1:a golvvärmekretsen / WiGa
# - Relay3 styr 2:a golvvärmekretsen / Sovrum
# - Relay4 oanvänd
# - Template-switches (Heating Control 1 & Heating Control 2) öppnar ställdon (relay 2/3), väntar 2 min, startar pump(relay 1)

substitutions:
  network: "192.168.12"
  device_num: "79"
  device_type: "sonoff-4chpror3"
  device_subtype: ""
  device_name: x${device_num}-eh-${device_type}
  device_ip: "${network}.${device_num}"
  admin_password: !secret admin_password
  #admin_password: !secret otaPWD
  #new_ota_password: !secret wifi_password
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  mqtt_user: !secret mqtt_user
  mqtt_password: !secret mqtt_password
  mqtt_broker: !secret mqtt_broker
  ca_certificates: !secret letsencrypt_cacerts

## ep energy mgmt
  em_usage: "4ch relä, r1 = cirkulationspump, r2 = heat area 1, wiga, r3 = heat area 2, sovrum"
  em_route: ""

# to change the ota-password, update once with old pw and uncomment this on_boot to set a new pw
esphome:
  name: ${device_name}
#  on_boot:
#    - lambda: |-
#        id(overtheair).set_auth_password(to_string("${new_ota_password}"));

esp8266:
  board: esp01_1m

logger:
  level: WARN

#wifi:
#  use_address: 192.168.12.209

mqtt:
  # override default tls connection, since esp8266 mqtt-component ssl/tls is broken 
  broker: mqtt.edupihi.home
  port: 1883
  # remove the esp-idf (esp32) specific mqtt settings from core.yaml
  skip_cert_cn_check: !remove
  idf_send_async: !remove
  certificate_authority: !remove

packages:
  remote_package:
    url: https://github.com/pihiandreas/esphome_components
    ref: main
    files:
      - ep_esphome_core.yaml # Core package
    refresh: 300s

switch:
  - platform: gpio
    name: "Relay 1"
    pin: GPIO12
    id: "relay_1"
  - platform: gpio
    name: "Relay 2"
    pin: GPIO5
    id: "relay_2"
  - platform: gpio
    name: "Relay 3"
    pin: GPIO4
    id: "relay_3"
  - platform: gpio
    name: "Relay 4"
    pin: GPIO15
    id: "relay_4"
  - platform: template
    name: "Heat Control 1"
    id: heat_control_01
    turn_on_action:
     - then:
        - switch.turn_on: relay_2 # open actuator
        - if:
            condition:
              switch.is_off: relay_1
            then:
              - logger.log: "Pump is not running, waiting 5min before starting pump"
              - delay: 300s
              - switch.turn_on: relay_1
            else:
              - logger.log: "Pump is already running"
        - switch.template.publish:
            id: heat_control_01
            state: ON
    turn_off_action:
      - then:
        - switch.turn_off: relay_2 # start closing actuator
        - if:
            condition:
              switch.is_off: relay_3
            then:
              - logger.log: "Turn off pump"
              - switch.turn_off: relay_1
            else:
              - logger.log: "Heat area 2 is running, leave pump running"
        - delay: 120s # give actuator time to close the valve before signalling state OFF
        - switch.template.publish:
            id: heat_control_01
            state: OFF
  - platform: template
    name: "Heat Control 2"
    id: heat_control_02
    turn_on_action:
     - then:
        - switch.turn_on: relay_3 # open actuator
        - if:
            condition:
              switch.is_off: relay_1
            then:
              - logger.log: "Pump is not running, waiting 5min before starting pump"
              - delay: 300s
              - switch.turn_on: relay_1
            else:
              - logger.log: "Pump is already running"
        - switch.template.publish:
            id: heat_control_02
            state: ON
    turn_off_action:
      - then:
        - switch.turn_off: relay_3 # start closing actuator
        - if:
            condition:
              switch.is_off: relay_2
            then:
              - logger.log: "Turn off pump"
              - switch.turn_off: relay_1
            else:
              - logger.log: "Heat area 1 is running, leave pump running"
        - delay: 120s # give actuator time to close the valve before signalling state OFF
        - switch.template.publish:
            id: heat_control_02
            state: OFF

#    turn_on_action:
#      - then:
#        - mqtt.publish:
#            topic: "esphome-dualr3power02/switch/esphome-dualr3power02_heating/command"
#            payload: "ON"
#        - switch.template.publish:
#            id: heating_control_1
#            state: ON

#binary_sensor:
  # Disable manual buttons 
  # - platform: gpio
  #   pin:
  #     number: GPIO0
  #     mode: INPUT_PULLUP
  #     inverted: True
  #   name: "Button 1"
  #   on_press:
  #     - logger.log: "$friendly_name Button 1"
  #     - switch.toggle: relay_1
  # - platform: gpio
  #   pin:
  #     number: GPIO09
  #     mode: INPUT_PULLUP
  #     inverted: True
  #   name: "Button 2"
  #   on_press:
  #     - logger.log: "$friendly_name Button 2"
  #     - switch.toggle: relay_2
  # - platform: gpio
  #   pin:
  #     number: GPIO10
  #     mode: INPUT_PULLUP
  #     inverted: True
  #   name: "Button 3"
  #   on_press:
  #     - logger.log: "$friendly_name Button 3"
  #     - switch.toggle: relay_3
  # - platform: gpio
  #   pin:
  #     number: GPIO14
  #     mode: INPUT_PULLUP
  #     inverted: True
  #   name: "Button 4"
  #   on_press:
  #     - logger.log: "$friendly_name Button 4"
  #     - switch.toggle: relay_4

status_led:
  pin:
    number: GPIO13
    inverted: True
