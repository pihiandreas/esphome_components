# Device: Mantra Nepal fan-light, ESP8266 chip talk to TuyaMCU over serial on 
# https://esphome.io/components/tuya.html
substitutions:
  network: "192.168.12"
  device_num: "91"
  device_type: "mantra-tuya"

  device_name: x${device_num}-eh-${device_type}
  device_ip: "${network}.${device_num}"
  admin_password: !secret admin_password
  # admin_password: !secret otaPWD
  # new_ota_password: !secret wifi_password
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  mqtt_user: !secret mqtt_user
  mqtt_password: !secret mqtt_password
  mqtt_broker: !secret mqtt_broker
  ca_certificates: !secret letsencrypt_cacerts

## ep energy mgmt
  em_usage: "Jules arbetsrum, taklampa"
  em_route: ""

# to change the ota-password, update once with old pw and uncomment this on_boot to set a new pw
esphome:
  name: $device_name
  on_boot:
    priority: -100
    then:
#      - lambda: |-
#          id(overtheair).set_auth_password(to_string("${new_ota_password}"));
      - delay: 10s
      - light.turn_off:
          id: tuyadimmer
      - fan.turn_off:
          id: tuyafan

esp8266:
  board: esp01_1m

# Enable logging
# Make sure logging is not using the serial port
logger:
  baud_rate: 0
  level: WARN

# wifi:
#   use_address: 192.168.12.129

mqtt:
  # override default tls connection, since esp8266 mqtt-component is broken 
  broker: mqtt.edupihi.home
  port: 1883
  # remove the esp-idf specific mqtt settings from core.yaml
  skip_cert_cn_check: !remove
  idf_send_async: !remove
  certificate_authority: !remove

uart:
  rx_pin: GPIO3
  tx_pin: GPIO1
  baud_rate: 9600

tuya:
# the 'tuya' device must have an ID so we can call it in the lambdas
  id: "tuyadevice"

light:
  - platform: "tuya"
    name: "Dimmable Light"
    id: "tuyadimmer"
    switch_datapoint: 9
    dimmer_datapoint: 10
    min_value: 82
    max_value: 996
    color_temperature_datapoint: 11
    color_temperature_max_value: 1000
    cold_white_color_temperature: 5000.0 K
    warm_white_color_temperature: 2700.0 K
    color_temperature_invert: true
    restore_mode: ALWAYS_OFF

fan:
  - platform: "tuya"
    id: "tuyafan"
    name: "Ceiling Fan"
    switch_datapoint: 1
    speed_datapoint: 3
    # direction_datapoint: 101
    speed_count: 32
    restore_mode: ALWAYS_OFF

sensor:
  - platform: "tuya"
    name: "Tuya Datapoint 1"
    sensor_datapoint: 1
  - platform: "tuya"
    name: "Tuya Datapoint 3"
    sensor_datapoint: 3
  - platform: "tuya"
    name: "Tuya Datapoint 6"
    sensor_datapoint: 6
  - platform: "tuya"
    name: "Tuya Datapoint 6"
    sensor_datapoint: 7
  - platform: "tuya"
    name: "Tuya Datapoint 101"
    sensor_datapoint: 101
  - platform: "tuya"
    name: "Tuya Datapoint 9"
    sensor_datapoint: 9
  - platform: "tuya"
    name: "Tuya Datapoint 10"
    sensor_datapoint: 10
  - platform: "tuya"
    name: "Tuya Datapoint 11"
    sensor_datapoint: 11

switch:
  # - platform: tuya
  #   name: Ceiling Fan Reverse 30%
  - platform: template
    name: Light - Dim to 30%
    turn_on_action:
      - logger.log: "$device_name Dimming light to 30%"
      - lambda: |-
          id(tuyadevice).set_integer_datapoint_value(10,175);
    # turn_off_action:
    #   - logger.log: "$device_name Not doing anything at Dim30 turn_off"
  - platform: template
    name: Light - Dim to 50%
    turn_on_action:
      - logger.log: "$device_name Dimming light to 50%"
      - lambda: |-
          id(tuyadevice).set_integer_datapoint_value(10,386);
  - platform: template
    name: Light - Dim to 70%
    turn_on_action:
      - logger.log: "$device_name Dimming light to 70%"
      - lambda: |-
          id(tuyadevice).set_integer_datapoint_value(10,628);
  - platform: template
    name: Light - Dim to 100%
    turn_on_action:
      - logger.log: "$device_name Dimming light to 100%"
      - lambda: |-
          id(tuyadevice).set_integer_datapoint_value(10,996);
  - platform: template
    name: Ceiling Fan - Reverse 40%
    turn_on_action:
      - logger.log: "$device_name Set Fan to REVERSE at 40%"
      - lambda: |-
          id(tuyadevice).set_boolean_datapoint_value(101,true);
#   fan speed: dpId = 3, type=4, range: 0x0=0 (minimal) - 0x06=6 (30%) - 0x0E=14 (50%) - 0x16=22 (70%) - 0x1F=31 (100%)
  - platform: template
    name: Ceiling Fan - Set to 30%
    turn_on_action:
      - logger.log: "$device_name Ceiling Fan to 30%"
      - lambda: |-
          id(tuyadevice).set_enum_datapoint_value(3,0x06);
    # turn_off_action:
    #   - logger.log: "$device_name Not doing anything at Dim30 turn_off"
  - platform: template
    name: Ceiling Fan - Set to 50%
    turn_on_action:
      - logger.log: "$device_name Ceiling Fan to 50%"
      - lambda: |-
          id(tuyadevice).set_enum_datapoint_value(3,0x0E);
  - platform: template
    name: Ceiling Fan - Set to 70%
    turn_on_action:
      - logger.log: "$device_name Ceiling Fan to 70%"
      - lambda: |-
          id(tuyadevice).set_enum_datapoint_value(3,0x16);
  - platform: template
    name: Ceiling Fan - Set to 100%
    turn_on_action:
      - logger.log: "$device_name Ceiling Fan to 100%"
      - lambda: |-
          id(tuyadevice).set_enum_datapoint_value(3,0x31);
  - platform: template
    name: Ceiling Fan - Night mode (minimal speed)
    turn_on_action:
      - logger.log: "$device_name Ceiling Fan Night mode"
      - lambda: |-
          id(tuyadevice).set_enum_datapoint_value(3,0x0);
packages:
  remote_package:
    url: https://github.com/pihiandreas/esphome_components
    ref: main
    files:
      - ep_esphome_core.yaml # Core package
    refresh: 300s


  


